generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SepoliaHead {
  id   Int    @id
  hash String @db.VarChar

  @@map("sepolia_head")
}


model BridgeRequest {
  id                      Int                  @id @default(autoincrement())
  asset                   String               
  source_address          String               @db.VarChar
  destination_address     String               @db.VarChar
  source_transaction      String
  destination_transaction String?
  type                    BridgeRequestType
  status                  BridgeRequestStatus

  @@index([source_address], map: "index_bridge_request_on_source_address")
  @@index([destination_address], map: "index_bridge_request_on_destination_address")

}

enum BridgeRequestType {
  IRONFISH_TO_ETH
  ETH_TO_IRONFISH
  @@map("bridge_request_type")
}

enum BridgeRequestStatus {
  PENDING
  CONFIRMED
  FAILED
  @@map("bridge_request_status")
}

model BridgeHead {
  hash      String   @db.VarChar @unique
}
